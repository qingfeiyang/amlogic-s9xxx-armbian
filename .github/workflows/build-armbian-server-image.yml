name: Build Armbian for S905L3B (Ultimate Fix)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: 检查代码
      uses: actions/checkout@v4

    - name: 释放最大空间（关键步骤）
      run: |
        # 清理超大型无用软件，释放50GB+空间
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/hostedtoolcache /var/lib/docker
        # 验证剩余空间（至少保留20GB以上）
        df -h
        # 增加交换分区（解决内存不足）
        sudo fallocate -l 8G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        free -m  # 确认交换分区生效

    - name: 安装依赖（仅核心组件）
      run: |
        set -x
        sudo apt update -y
        sudo apt install -y build-essential git debootstrap qemu-user-static \
          bc flex bison libssl-dev u-boot-tools rsync device-tree-compiler
        set +x

    - name: 编译Armbian（三重日志备份+资源限制）
      run: |
        # 1. 定义日志文件（同时输出到3个位置确保不丢失）
        LOG_FILE1="/tmp/compile.log"
        LOG_FILE2="${GITHUB_WORKSPACE}/compile.log"  # 工作目录日志（易保存）
        touch $LOG_FILE1 $LOG_FILE2

        # 2. 启动资源监控（每10秒记录一次，更密集监控）
        (while true; do
          echo "=== 资源监控 $(date) ===" | tee -a $LOG_FILE1 $LOG_FILE2
          free -m | tee -a $LOG_FILE1 $LOG_FILE2
          df -h | tee -a $LOG_FILE1 $LOG_FILE2
          top -b -n 1 | head -20 | tee -a $LOG_FILE1 $LOG_FILE2  # 记录进程占用
          sleep 10
        done) &
        MONITOR_PID=$!

        # 3. 执行编译（限制CPU核心数为2，避免内存爆炸）
        echo "=== 开始编译 $(date) ===" | tee -a $LOG_FILE1 $LOG_FILE2
        cd build
        # 关键：--jobs 2 限制并行任务，--debug 强制调试输出
        sudo ./compile.sh \
          BOARD=s905l3 \
          BRANCH=legacy \
          RELEASE=bullseye \
          KERNEL_ONLY=no \
          BUILD_DESKTOP=no \
          CLEAN_LEVEL=images \
          USE_TORRENT=no \
          KERNELBRANCH="tag:v5.15.137" \
          EXTRA_ARGUMENTS="USB_INIT=yes" \
          --debug \
          --jobs 2 2>&1 | tee -a $LOG_FILE1 $LOG_FILE2  # 同时输出到终端和日志

        # 4. 清理监控进程
        kill $MONITOR_PID
        echo "=== 编译结束 $(date) ===" | tee -a $LOG_FILE1 $LOG_FILE2

    - name: 强制上传所有日志（无论任何情况）
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: all-logs
        path: |
          /tmp/compile.log
          ${{ github.workspace }}/compile.log
        retention-days: 14  # 保留14天便于排查

    - name: 上传镜像（成功时）
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: armbian-s905l3b-usb
        path: build/output/images/*.img.xz
        retention-days: 30
