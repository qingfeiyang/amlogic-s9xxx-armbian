name: Build Armbian for S905L3B

on:
  workflow_dispatch:  # 仅保留手动触发

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      # 注意：Armbian官方仓库中S905L3系列通常使用"s905l3"作为BOARD名称
      BOARD: "s905l3"
      RELEASE: "bullseye"
      KERNEL_VERSION: "6.1.147"
      # 设备树使用与你的gxlx2_p295_1g匹配的版本
      DTB_PATH: "https://raw.githubusercontent.com/ophub/amlogic-dtb/meson-gxl/gxlx2_p295_1g.dtb"
      # 输出镜像目录
      OUTPUT_DIR: "build/output/images"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup build environment
      run: |
        # 安装必要依赖（Armbian推荐的完整依赖列表）
        sudo apt update -y
        sudo apt install -y \
          build-essential git libncurses5-dev libssl-dev \
          bc flex bison libelf-dev liblz4-tool whiptail \
          parted kmod debootstrap qemu-user-static \
          chroot dosfstools rsync u-boot-tools curl

    - name: Download and prepare DTB
      run: |
        # 下载设备树并放在userpatches目录（Armbian优先读取此目录的DTB）
        mkdir -p userpatches/dtb
        wget -O "userpatches/dtb/gxlx2_p295_1g.dtb" ${{ env.DTB_PATH }}
        # 验证DTB文件是否下载成功
        if [ ! -f "userpatches/dtb/gxlx2_p295_1g.dtb" ]; then
          echo "DTB文件下载失败"
          exit 1
        fi

    - name: Clone Armbian build repository
      run: |
        git clone --depth=1 https://github.com/armbian/build.git
        cd build
        # 检查内核标签是否存在
        if ! git ls-remote --tags https://github.com/armbian/linux | grep -q "v${{ env.KERNEL_VERSION }}"; then
          echo "内核版本 ${KERNEL_VERSION} 不存在，请检查版本号"
          exit 1
        fi

    - name: Build Armbian image
      run: |
        cd build
        sudo ./compile.sh \
          BOARD=${{ env.BOARD }} \
          BRANCH=current \
          RELEASE=${{ env.RELEASE }} \
          KERNEL_ONLY=no \
          KERNEL_CONFIGURE=no \
          BUILD_DESKTOP=no \
          # 清理级别设为images，避免重复编译工具链（加速构建）
          CLEAN_LEVEL="images" \
          USE_TORRENT=no \
          # 指定自定义DTB（相对于build目录的路径）
          CUSTOM_DTB="../userpatches/dtb/gxlx2_p295_1g.dtb" \
          KERNELBRANCH="tag:v${{ env.KERNEL_VERSION }}" \
          # 增加U盘启动支持的参数
          EXTRA_ARGUMENTS="USB_INIT=yes"

    - name: Verify build output
      run: |
        # 检查是否生成了镜像文件
        if [ -z "$(ls -A ${{ env.OUTPUT_DIR }}/*.img.xz 2>/dev/null)" ]; then
          echo "构建失败，未生成镜像文件"
          exit 1
        fi
        # 显示生成的镜像名称
        ls -lh ${{ env.OUTPUT_DIR }}/*.img.xz

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Armbian_S905L3B_Image
        # Armbian默认生成xz压缩的镜像，需包含压缩文件
        path: ${{ env.OUTPUT_DIR }}/*.img.xz
        # 保留镜像30天
        retention-days: 30
